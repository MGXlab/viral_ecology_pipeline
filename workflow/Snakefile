# ------------------------------ Config parsing------------------------- #
configfile: "config/config.yaml"

# ------------------------------ Include Snakefiles ------------------------- #
include: "rules/common.smk"
include: "rules/1_fastp.smk"
include: "rules/2_assembly.smk"
include: "rules/3_length_filtering.smk"
include: "rules/4_minimap.smk"
# include: "rules/5_wtp.smk"
# include: "rules/6_hmmsearch.smk"
# ------------------------------ Targets ------------------------------------ #

samples_df = samplesheet_to_df(config['samplesheet'])

FRACTIONS = samples_df['fraction'].unique().tolist()
VIRAL_SAMPLES = samples_df.loc[samples_df.fraction == 'viral', 'sample_id'].values.tolist()
MICROBIAL_SAMPLES = samples_df.loc[samples_df.fraction == 'microbial', 'sample_id'].values.tolist()

rule all:
    input:
        expand("results/{fraction}/{sample}/qc/{sample}.fastp.html",
                fraction=['viral'], sample=VIRAL_SAMPLES),
        expand("results/{fraction}/{sample}/qc/{sample}.fastp.html",
                fraction=['microbial'], sample=MICROBIAL_SAMPLES),
        expand("results/{fraction}/{sample}/assembly/scaffolds.fasta",
                fraction=['viral'], sample=VIRAL_SAMPLES),
        expand("results/{fraction}/{sample}/assembly/scaffolds.fasta",
                fraction=['microbial'], sample=MICROBIAL_SAMPLES),
        expand("results/{fraction}/{sample}/scaffolds/{sample}_scaffolds.fasta",
                fraction=['viral'], sample=VIRAL_SAMPLES),
        expand("results/{fraction}/{sample}/scaffolds/{sample}_scaffolds.fasta",
                fraction=['microbial'], sample=MICROBIAL_SAMPLES),
        expand("results/{fraction}/{sample}/scaffolds/{sample}_scaffolds_gt1500.fasta",
                fraction=['viral'], sample=VIRAL_SAMPLES),
        expand("results/{fraction}/{sample}/scaffolds/{sample}_scaffolds_gt1500.fasta",
                fraction=['microbial'], sample=MICROBIAL_SAMPLES),
        "results/viral/concatenated_scaffolds/viral_scaffolds_gt1500.fasta",
        "results/microbial/concatenated_scaffolds/microbial_scaffolds_gt1500.fasta",
        "results/minimap/viral_to_microbial_minimap.paf",
        "results/minimap/viral_query.csv",
        "results/minimap/microbial_query.csv"
        # "results/wtp/output/runinfo/execution_report.html",
        # "results/wtp/output/literature/Citations.bib",
        # "results/wtp/output/microbial_scaffolds_gt1500/microbial_scaffolds_gt1500_quality_summary.tsv",
        # "results/wtp/output/viral_scaffolds_gt1500/viral_scaffolds_gt1500_quality_summary.tsv"
