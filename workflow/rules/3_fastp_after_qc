rule fastp_after_qc:
    input:
        filtered_paired_1 = "results/{sample}/bwa_mem_eukaryotic_reference_genomes/{sample}_filtered_paired_reads_1.fastq",
        filtered_paired_2 = "results/{sample}/bwa_mem_eukaryotic_reference_genomes/{sample}_filtered_paired_reads_2.fastq",
    output:
        afterqc_paired_1 = "results/{sample}/fastp_after_qc/{sample}_1.clean_paired.fastq.gz",
        afterqc_paired_2 = "results/{sample}/fastp_after_qc/{sample}_2.clean_paired.fastq.gz",
        afterqc_unpaired_1 = "results/{sample}/fastp_after_qc/{sample}_1.clean_unpaired.fastq.gz",
        afterqc_unpaired_2 = "results/{sample}/fastp_after_qc/{sample}_2.clean_unpaired.fastq.gz",
        afterqc_html = "results/{sample}/fastp_after_qc/{sample}.fastp.html",
        afterqc_json = "results/{sample}/fastp_after_qc/{sample}.fastp.json"
    log:
        "logs/{sample}/afterqc_fastp/{sample}.fastp.log"
    threads:
        config["FASTP"]["threads"]
    conda:
        "../envs/fastp.yaml"
    shell:
        "fastp -i {input[0]} -I {input[1]} "
        "-o {output.afterqc_paired_1} -O {output.afterqc_paired_2} "
        "--unpaired1 {output.afterqc_unpaired_1} --unpaired2 {output.afterqc_unpaired_2} "
        "--html {afterqc_output.html} --json {afterqc_output.json} "
        "--dedup --detect_adapter_for_pe "
        "&> {log}"
